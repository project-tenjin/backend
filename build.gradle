buildscript {
    ext {
        springBootVersion = '2.6.8'
    }
    repositories {
        mavenCentral()
        maven {
          url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "com.github.node-gradle:gradle-node-plugin:3.5.1"
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.github.node-gradle.node'

jar {
    archiveBaseName = 'project-tenjin'
    archiveVersion = '2.0-SNAPSHOT'
}

compileJava {
    options.release = 11
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}")
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation("org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:${springBootVersion}")
    implementation('org.springframework.security.oauth:spring-security-oauth2:2.5.2.RELEASE')
    implementation('com.google.apis:google-api-services-sheets:v4-rev612-1.25.0')

    runtimeOnly('org.springframework.boot:spring-boot-devtools')

    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation('org.junit.vintage:junit-vintage-engine')
    testImplementation('com.mscharhag.oleaster:oleaster-runner:0.2.0') {
      exclude group: 'junit', module: 'junit'
    }
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    testImplementation('xml-apis:xml-apis:1.4.01')

    testImplementation('org.fluentlenium:fluentlenium-core:4.8.0')
    testImplementation('org.fluentlenium:fluentlenium-junit:4.8.0') {
      exclude group: 'junit', module: 'junit'
    }
    testImplementation('org.fluentlenium:fluentlenium-assertj:4.8.0')
    testImplementation('org.seleniumhq.selenium:selenium-java:3.141.59')
    testImplementation('io.github.bonigarcia:webdrivermanager:4.4.3')
    testImplementation('com.github.detro:ghostdriver:2.1.0')
}

node {
  download = true
  version = "18.14.0"
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

test.dependsOn(npm_test)

test {
    useJUnitPlatform()
    testLogging {
        events "skipped", "failed"
    }
}
